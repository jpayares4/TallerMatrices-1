/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package interfaz;

import clases.Helper;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author jpayares4
 */
public class Principal extends javax.swing.JFrame {

    /**
     * 
     */
    
    public Principal() {
        initComponents();
        JButton botonesH[]={cmdCrear, cmdLimpiar};
        JButton botonesD[]={cmdLlenadoManual,cmdLlenadoAutomatico,cmdOperacion};
        
        Helper.habilitarBotones(botonesH);
        Helper.deshabilitarBotones(botonesD);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNumerodeFilas = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNumerodeColumnas = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        cmdCrear = new javax.swing.JButton();
        cmdLlenadoManual = new javax.swing.JButton();
        cmdLlenadoAutomatico = new javax.swing.JButton();
        cmdOperacion = new javax.swing.JButton();
        cmdLimpiar = new javax.swing.JButton();
        cmbOperaciones = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTablaInicial = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTablaResultado = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblTablaInicial1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("OPERACIONES MATRICES");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, 170, 20));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos Iniciales", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("N° de filas:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        txtNumerodeFilas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumerodeFilasKeyTyped(evt);
            }
        });
        jPanel2.add(txtNumerodeFilas, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 60, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("N° de columnas:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, -1, -1));

        txtNumerodeColumnas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumerodeColumnasKeyTyped(evt);
            }
        });
        jPanel2.add(txtNumerodeColumnas, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 60, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 370, 70));

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Acciones", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmdCrear.setText("Crear");
        cmdCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCrearActionPerformed(evt);
            }
        });
        jPanel3.add(cmdCrear, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        cmdLlenadoManual.setText("Manual");
        cmdLlenadoManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLlenadoManualActionPerformed(evt);
            }
        });
        jPanel3.add(cmdLlenadoManual, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, -1, -1));

        cmdLlenadoAutomatico.setText("Automático");
        cmdLlenadoAutomatico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLlenadoAutomaticoActionPerformed(evt);
            }
        });
        jPanel3.add(cmdLlenadoAutomatico, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, -1, -1));

        cmdOperacion.setText("Operación");
        cmdOperacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOperacionActionPerformed(evt);
            }
        });
        jPanel3.add(cmdOperacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, -1, -1));

        cmdLimpiar.setText("Limpiar");
        cmdLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLimpiarActionPerformed(evt);
            }
        });
        jPanel3.add(cmdLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 30, -1, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 70, 450, 70));

        cmbOperaciones.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Letra B", "Letra K", "Letra M", "Figura I", "Figura II", "Figura III", "Figura IV", "Letra W", "Letra  Q", "Letra  J", "Letra  G", "Letra  R" }));
        jPanel1.add(cmbOperaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 390, -1, -1));

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 430, -1, -1));

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Matrix N°1", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblTablaInicial.setBackground(new java.awt.Color(0, 0, 0));
        tblTablaInicial.setForeground(new java.awt.Color(255, 255, 255));
        tblTablaInicial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblTablaInicial.setToolTipText("");
        tblTablaInicial.setEnabled(false);
        jScrollPane1.setViewportView(tblTablaInicial);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 360, 180));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 400, 230));

        jPanel6.setBackground(new java.awt.Color(0, 0, 0));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Matrix Resultante", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblTablaResultado.setBackground(new java.awt.Color(0, 0, 0));
        tblTablaResultado.setForeground(new java.awt.Color(255, 255, 255));
        tblTablaResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblTablaResultado.setEnabled(false);
        jScrollPane2.setViewportView(tblTablaResultado);

        jPanel6.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 390, 180));

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 150, 430, 230));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Captura.PNG"))); // NOI18N
        jLabel4.setText("jLabel4");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 480));

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Matrix N°1", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel5.setForeground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblTablaInicial1.setBackground(new java.awt.Color(0, 0, 0));
        tblTablaInicial1.setForeground(new java.awt.Color(255, 255, 255));
        tblTablaInicial1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblTablaInicial1.setToolTipText("");
        tblTablaInicial1.setEnabled(false);
        jScrollPane3.setViewportView(tblTablaInicial1);

        jPanel5.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 360, 140));

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 400, 210));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(896, 513));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmdCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCrearActionPerformed
       if (txtNumerodeFilas.getText().trim().isEmpty()) {
            Helper.mensaje(this, "Digite  el numero de filas",3);
            txtNumerodeFilas.requestFocusInWindow();
       }
            if (txtNumerodeColumnas.getText().trim().isEmpty()) {
            Helper.mensaje(this, "Digite  el numero de Columnas",3);
            txtNumerodeColumnas.requestFocusInWindow();
            }
        else {
           
        
        int nf, nc;
        DefaultTableModel tm, tm2;
        nc = tblTablaInicial.getColumnCount();
        nf = tblTablaResultado.getRowCount();
     
        nf = Integer.parseInt(txtNumerodeFilas.getText());
        nc = Integer.parseInt(txtNumerodeColumnas.getText());

        tm = (DefaultTableModel) tblTablaInicial.getModel();
        tm2 = (DefaultTableModel) tblTablaResultado.getModel();

        tm.setRowCount(nf);
        tm.setColumnCount(nc);

        tm2.setRowCount(nf);
        tm2.setColumnCount(nc);

        JButton botonesH[]={cmdLlenadoManual,cmdLlenadoAutomatico, cmdLimpiar};
        JButton botonesD[]={cmdCrear, cmdOperacion};
        
        Helper.habilitarBotones(botonesH);
        Helper.deshabilitarBotones(botonesD);
          
        }
    }//GEN-LAST:event_cmdCrearActionPerformed

    private void cmdLlenadoAutomaticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLlenadoAutomaticoActionPerformed
         int nf, nc, n;

        nc = tblTablaInicial.getColumnCount();
        nf = tblTablaInicial.getRowCount();

        for (int i = 0; i < nf; i++) {
            for (int j = 0; j < nc; j++) {
                n = (int) (Math.random() * 50 + 1);
                tblTablaInicial.setValueAt(n, i, j);
            }

        }

        JButton botonesH[]={cmdOperacion, cmdLimpiar};
        JButton botonesD[]={cmdCrear, cmdLlenadoManual, cmdLlenadoAutomatico};
        
        Helper.habilitarBotones(botonesH);
        Helper.deshabilitarBotones(botonesD);
        
        
    }//GEN-LAST:event_cmdLlenadoAutomaticoActionPerformed

    private void cmdOperacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOperacionActionPerformed
       int op;
        op = cmbOperaciones.getSelectedIndex();
        Helper.limpiadoTabla(tblTablaResultado);
       
         switch (op) {
            case 0:
               if (Integer.parseInt(txtNumerodeFilas.getText()) < 5 || Integer.parseInt(txtNumerodeFilas.getText()) >5) {
                Helper.mensaje(this, "El numero de FILAS deve ser igual a 5 para mostrar la figura ", 1);
                txtNumerodeFilas.requestFocusInWindow();
                txtNumerodeFilas.selectAll();
               }
                else if (Integer.parseInt(txtNumerodeColumnas.getText()) < 5 || Integer.parseInt(txtNumerodeColumnas.getText()) >5) {
                Helper.mensaje(this, "El  numero de COLUMNAS deve ser igual a 5 para mostrar la figura ", 1);
                txtNumerodeColumnas.requestFocusInWindow();
                txtNumerodeColumnas.selectAll();
                }else{
                    Helper.letraB(tblTablaInicial, tblTablaResultado);
               
                }
                 break; 
            case 1:
                 if (Integer.parseInt(txtNumerodeFilas.getText()) < 5 || Integer.parseInt(txtNumerodeFilas.getText()) >5) {
                Helper.mensaje(this, "El numero de FILAS deve ser igual a 5 para mostrar la figura ", 1);
                txtNumerodeFilas.requestFocusInWindow();
                txtNumerodeFilas.selectAll();
               }
                else if (Integer.parseInt(txtNumerodeColumnas.getText()) < 4 || Integer.parseInt(txtNumerodeColumnas.getText()) >4) {
                Helper.mensaje(this, "El  numero de COLUMNAS deve ser igual a 4 para mostrar la figura ", 1);
                txtNumerodeColumnas.requestFocusInWindow();
                txtNumerodeColumnas.selectAll();
                }else{
                Helper.letraK(tblTablaInicial, tblTablaResultado);
                }
                 break;
            case 2:
                  if (Integer.parseInt(txtNumerodeFilas.getText()) < 5 || Integer.parseInt(txtNumerodeFilas.getText()) >5) {
                Helper.mensaje(this, "El numero de FILAS deve ser igual a 5 para mostrar la figura ", 1);
                txtNumerodeFilas.requestFocusInWindow();
                txtNumerodeFilas.selectAll();
               }
                else if (Integer.parseInt(txtNumerodeColumnas.getText()) < 5 || Integer.parseInt(txtNumerodeColumnas.getText()) >5) {
                Helper.mensaje(this, "El  numero de COLUMNAS deve ser igual a 5 para mostrar la figura ", 1);
                txtNumerodeColumnas.requestFocusInWindow();
                txtNumerodeColumnas.selectAll();
                }else{
                Helper.letraM(tblTablaInicial, tblTablaResultado);
                }
                break;
            case 3:
                 if (Integer.parseInt(txtNumerodeFilas.getText()) < 6|| Integer.parseInt(txtNumerodeFilas.getText()) >6) {
                Helper.mensaje(this, "El numero de FILAS deve ser igual a 6 para mostrar la figura ", 1);
                txtNumerodeFilas.requestFocusInWindow();
                txtNumerodeFilas.selectAll();
               }
                else if (Integer.parseInt(txtNumerodeColumnas.getText()) < 5 || Integer.parseInt(txtNumerodeColumnas.getText()) >5) {
                Helper.mensaje(this, "El  numero de COLUMNAS deve ser igual a 5 para mostrar la figura ", 1);
                txtNumerodeColumnas.requestFocusInWindow();
                txtNumerodeColumnas.selectAll();
                }else{
                Helper.FiguraI(tblTablaInicial, tblTablaResultado);
                }
                break;
            case 4:
                 if (Integer.parseInt(txtNumerodeFilas.getText()) < 5|| Integer.parseInt(txtNumerodeFilas.getText()) >5) {
                Helper.mensaje(this, "El numero de FILAS deve ser igual a 5 para mostrar la figura ", 1);
                txtNumerodeFilas.requestFocusInWindow();
                txtNumerodeFilas.selectAll();
               }
                else if (Integer.parseInt(txtNumerodeColumnas.getText()) < 6 || Integer.parseInt(txtNumerodeColumnas.getText()) >6) {
                Helper.mensaje(this, "El  numero de COLUMNAS deve ser igual a 6 para mostrar la figura ", 1);
                txtNumerodeColumnas.requestFocusInWindow();
                txtNumerodeColumnas.selectAll();
                }else{
                Helper.FiguraII(tblTablaInicial, tblTablaResultado);
                }
                break;
            case 5:
                 if (Integer.parseInt(txtNumerodeFilas.getText()) < 6|| Integer.parseInt(txtNumerodeFilas.getText()) >6) {
                Helper.mensaje(this, "El numero de FILAS deve ser igual a 6 para mostrar la figura ", 1);
                txtNumerodeFilas.requestFocusInWindow();
                txtNumerodeFilas.selectAll();
               }
                else if (Integer.parseInt(txtNumerodeColumnas.getText()) < 6 || Integer.parseInt(txtNumerodeColumnas.getText()) >6) {
                Helper.mensaje(this, "El  numero de COLUMNAS deve ser igual a 6 para mostrar la figura ", 1);
                txtNumerodeColumnas.requestFocusInWindow();
                txtNumerodeColumnas.selectAll();
                }else{
                Helper.FiguraIII(tblTablaInicial, tblTablaResultado);
                }
                break;
            case 6:
                 if (Integer.parseInt(txtNumerodeFilas.getText()) < 5|| Integer.parseInt(txtNumerodeFilas.getText()) >5) {
                Helper.mensaje(this, "El numero de FILAS deve ser igual a 5 para mostrar la figura ", 1);
                txtNumerodeFilas.requestFocusInWindow();
                txtNumerodeFilas.selectAll();
               }
                else if (Integer.parseInt(txtNumerodeColumnas.getText()) < 5 || Integer.parseInt(txtNumerodeColumnas.getText()) >5) {
                Helper.mensaje(this, "El  numero de COLUMNAS deve ser igual a 5 para mostrar la figura ", 1);
                txtNumerodeColumnas.requestFocusInWindow();
                txtNumerodeColumnas.selectAll();
                }else{
                Helper.FiguraIV(tblTablaInicial, tblTablaResultado);
                }
                break;
            case 7:
                 if (Integer.parseInt(txtNumerodeFilas.getText()) < 5|| Integer.parseInt(txtNumerodeFilas.getText()) >5) {
                Helper.mensaje(this, "El numero de FILAS deve ser igual a 5 para mostrar la figura ", 1);
                txtNumerodeFilas.requestFocusInWindow();
                txtNumerodeFilas.selectAll();
               }
                else if (Integer.parseInt(txtNumerodeColumnas.getText()) < 5 || Integer.parseInt(txtNumerodeColumnas.getText()) >5) {
                Helper.mensaje(this, "El  numero de COLUMNAS deve ser igual a 5 para mostrar la figura ", 1);
                txtNumerodeColumnas.requestFocusInWindow();
                txtNumerodeColumnas.selectAll();
                }else{
                Helper.letraW(tblTablaInicial, tblTablaResultado);
                }
                break;
            case 8:
                 if (Integer.parseInt(txtNumerodeFilas.getText()) < 5|| Integer.parseInt(txtNumerodeFilas.getText()) >5) {
                Helper.mensaje(this, "El numero de FILAS deve ser igual a 5 para mostrar la figura ", 1);
                txtNumerodeFilas.requestFocusInWindow();
                txtNumerodeFilas.selectAll();
               }
                else if (Integer.parseInt(txtNumerodeColumnas.getText()) < 5 || Integer.parseInt(txtNumerodeColumnas.getText()) >5) {
                Helper.mensaje(this, "El  numero de COLUMNAS deve ser igual a 5 para mostrar la figura ", 1);
                txtNumerodeColumnas.requestFocusInWindow();
                txtNumerodeColumnas.selectAll();
                }else{
                Helper.letraQ(tblTablaInicial, tblTablaResultado);
                }
                break;
            case 9:
                 if (Integer.parseInt(txtNumerodeFilas.getText()) < 5|| Integer.parseInt(txtNumerodeFilas.getText()) >5) {
                Helper.mensaje(this, "El numero de FILAS deve ser igual a 5 para mostrar la figura ", 1);
                txtNumerodeFilas.requestFocusInWindow();
                txtNumerodeFilas.selectAll();
               }
                else if (Integer.parseInt(txtNumerodeColumnas.getText()) < 5 || Integer.parseInt(txtNumerodeColumnas.getText()) >5) {
                Helper.mensaje(this, "El  numero de COLUMNAS deve ser igual a 5 para mostrar la figura ", 1);
                txtNumerodeColumnas.requestFocusInWindow();
                txtNumerodeColumnas.selectAll();
                }else{
                Helper.letraJ(tblTablaInicial, tblTablaResultado);
                }
                break;
            case 10:
                 if (Integer.parseInt(txtNumerodeFilas.getText()) < 6|| Integer.parseInt(txtNumerodeFilas.getText()) >6) {
                Helper.mensaje(this, "El numero de FILAS deve ser igual a 6 para mostrar la figura ", 1);
                txtNumerodeFilas.requestFocusInWindow();
                txtNumerodeFilas.selectAll();
               }
                else if (Integer.parseInt(txtNumerodeColumnas.getText()) < 5 || Integer.parseInt(txtNumerodeColumnas.getText()) >5) {
                Helper.mensaje(this, "El  numero de COLUMNAS deve ser igual a 5 para mostrar la figura ", 1);
                txtNumerodeColumnas.requestFocusInWindow();
                txtNumerodeColumnas.selectAll();
                }else{
                Helper.letraG(tblTablaInicial, tblTablaResultado);
                }
                break;
            case 11:
                 if (Integer.parseInt(txtNumerodeFilas.getText()) < 5|| Integer.parseInt(txtNumerodeFilas.getText()) >5) {
                Helper.mensaje(this, "El numero de FILAS deve ser igual a 5 para mostrar la figura ", 1);
                txtNumerodeFilas.requestFocusInWindow();
                txtNumerodeFilas.selectAll();
               }
                else if (Integer.parseInt(txtNumerodeColumnas.getText()) < 5 || Integer.parseInt(txtNumerodeColumnas.getText()) >5) {
                Helper.mensaje(this, "El  numero de COLUMNAS deve ser igual a 5 para mostrar la figura ", 1);
                txtNumerodeColumnas.requestFocusInWindow();
                txtNumerodeColumnas.selectAll();
                }else{
                Helper.letraR(tblTablaInicial, tblTablaResultado);
                }
                break;
         }
        
        JButton botonesH[]={cmdOperacion,cmdLimpiar};
        JButton botonesD[]={cmdLlenadoManual,cmdLlenadoAutomatico};
        
        Helper.habilitarBotones(botonesH);
        Helper.deshabilitarBotones(botonesD);
        
    }//GEN-LAST:event_cmdOperacionActionPerformed

    private void cmdLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLimpiarActionPerformed
         txtNumerodeFilas.setText("");
        txtNumerodeColumnas.setText("");
        txtNumerodeFilas.requestFocusInWindow();
        cmbOperaciones.setSelectedIndex(0);
       

       Helper.porDefectoTabla(tblTablaInicial);
       Helper.porDefectoTabla(tblTablaResultado);
       
       JButton botonesH[]={cmdCrear, cmdLimpiar};
        JButton botonesD[]={cmdLlenadoManual,cmdLlenadoAutomatico,cmdOperacion};
        
        Helper.habilitarBotones(botonesH);
        Helper.deshabilitarBotones(botonesD);
        
    }//GEN-LAST:event_cmdLimpiarActionPerformed

    private void cmdLlenadoManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLlenadoManualActionPerformed
        // TODO add your handling code here:
           int nf, nc;
        int n;
        int sw, res;

        nc = tblTablaInicial.getColumnCount();
        nf = tblTablaInicial.getRowCount();

        for (int i = 0; i < nf; i++) {
            for (int j = 0; j < nc; j++) {
                do {
                    sw = 1;
                    try {
                        n = Integer.parseInt(JOptionPane.showInputDialog(this, "Digite el elmento en la posición [" + i + "]" + "[" + j + "]").trim());
                        tblTablaInicial.setValueAt(n, i, j);
                    } catch (NumberFormatException e) {
                        Helper.mensaje(this, "Digite un número válido", 3);
                        sw = 0;
                    } catch (NullPointerException e) {
                        res = JOptionPane.showConfirmDialog(this, "¿Seguro que desea salir?", "Salir", JOptionPane.YES_NO_OPTION);
                        if (res == 0) {
                            sw = 1;
                            i = nf;
                            j = nc;

                            Helper.porDefectoTabla(tblTablaInicial);
                            Helper.porDefectoTabla(tblTablaResultado);
                        } else {
                            sw = 0;
                        }
                    }
                } while (sw == 0);
            }
        }
        JButton botonesH[]={cmdOperacion, cmdLimpiar};
        JButton botonesD[]={cmdCrear, cmdLlenadoManual, cmdLlenadoAutomatico};
        
        Helper.habilitarBotones(botonesH);
        Helper.deshabilitarBotones(botonesD);
                                                   



    }//GEN-LAST:event_cmdLlenadoManualActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtNumerodeFilasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumerodeFilasKeyTyped
        // TODO add your handling code here:
         char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            getToolkit().beep();

            evt.consume();
        }
        
    }//GEN-LAST:event_txtNumerodeFilasKeyTyped

    private void txtNumerodeColumnasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumerodeColumnasKeyTyped
        // TODO add your handling code here:
         char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            getToolkit().beep();

            evt.consume();
        }
        
    }//GEN-LAST:event_txtNumerodeColumnasKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbOperaciones;
    private javax.swing.JButton cmdCrear;
    private javax.swing.JButton cmdLimpiar;
    private javax.swing.JButton cmdLlenadoAutomatico;
    private javax.swing.JButton cmdLlenadoManual;
    private javax.swing.JButton cmdOperacion;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblTablaInicial;
    private javax.swing.JTable tblTablaInicial1;
    private javax.swing.JTable tblTablaResultado;
    private javax.swing.JTextField txtNumerodeColumnas;
    private javax.swing.JTextField txtNumerodeFilas;
    // End of variables declaration//GEN-END:variables
}
